{
  "name": "urijs",
  "version": "1.16.1",
  "title": "URI.js - Mutating URLs",
  "author": {
    "name": "Rodney Rehm",
    "url": "http://rodneyrehm.de"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/medialize/URI.js.git"
  },
  "license": "MIT",
  "description": "URI.js is a Javascript library for working with URLs.",
  "keywords": [
    "uri",
    "url",
    "urn",
    "uri mutation",
    "url mutation",
    "uri manipulation",
    "url manipulation",
    "uri template",
    "url template",
    "unified resource locator",
    "unified resource identifier",
    "query string",
    "RFC 3986",
    "RFC3986",
    "RFC 6570",
    "RFC6570",
    "jquery-plugin",
    "ecosystem:jquery"
  ],
  "categories": [
    "Parsers & Compilers",
    "Utilities"
  ],
  "main": "./src/URI",
  "homepage": "http://medialize.github.io/URI.js/",
  "contributors": [
    {
      "name": "Francois-Guillaume Ribreau",
      "email": "npm@fgribreau.com",
      "url": "http://fgribreau.com"
    }
  ],
  "files": [
    "src/URI.js",
    "src/IPv6.js",
    "src/SecondLevelDomains.js",
    "src/punycode.js",
    "src/URITemplate.js",
    "src/jquery.URI.js",
    "src/URI.min.js",
    "src/jquery.URI.min.js",
    "src/URI.fragmentQuery.js",
    "src/URI.fragmentURI.js",
    "LICENSE.txt"
  ],
  "npmName": "urijs",
  "npmFileMap": [
    {
      "basePath": "/src/",
      "files": [
        "*.js"
      ]
    },
    {
      "basePath": "/",
      "files": [
        "LICENSE.txt"
      ]
    }
  ],
  "devDependencies": {
    "jshint-stylish": "~0.1.5",
    "grunt": "~0.4.2",
    "grunt-contrib-jshint": "~0.8.0"
  },
  "readme": "# URI.js #\n\n* [About](http://medialize.github.io/URI.js/)\n* [Understanding URIs](http://medialize.github.io/URI.js/about-uris.html)\n* [Documentation](http://medialize.github.io/URI.js/docs.html)\n* [jQuery URI Plugin](http://medialize.github.io/URI.js/jquery-uri-plugin.html)\n* [Author](http://rodneyrehm.de/en/)\n\n---\n\n> **NOTE:** The npm package name changed to `urijs`\n\n---\n\nI always want to shoot myself in the head when looking at code like the following:\n\n```javascript\nvar url = \"http://example.org/foo?bar=baz\";\nvar separator = url.indexOf('?') > -1 ? '&' : '?';\n\nurl += separator + encodeURIComponent(\"foo\") + \"=\" + encodeURIComponent(\"bar\");\n```\n\nThings are looking up with [URL](https://developer.mozilla.org/en/docs/Web/API/URL) and the [URL spec](http://url.spec.whatwg.org/) but until we can safely rely on that API, have a look at URI.js for a clean and simple API for mutating URIs:\n\n```javascript\nvar url = new URI(\"http://example.org/foo?bar=baz\");\nurl.addQuery(\"foo\", \"bar\");\n```\n\nURI.js is here to help with that.\n\n\n## API Example ##\n\n```javascript\n// mutating URLs\nURI(\"http://example.org/foo.html?hello=world\")\n  .username(\"rodneyrehm\")\n    // -> http://rodneyrehm@example.org/foo.html?hello=world\n  .username(\"\")\n    // -> http://example.org/foo.html?hello=world\n  .directory(\"bar\")\n    // -> http://example.org/bar/foo.html?hello=world\n  .suffix(\"xml\")\n    // -> http://example.org/bar/foo.xml?hello=world\n  .query(\"\")\n    // -> http://example.org/bar/foo.xml\n  .tld(\"com\")\n    // -> http://example.com/bar/foo.xml\n  .query({ foo: \"bar\", hello: [\"world\", \"mars\"] });\n    // -> http://example.com/bar/foo.xml?foo=bar&hello=world&hello=mars\n\n// cleaning things up\nURI(\"?&foo=bar&&foo=bar&foo=baz&\")\n  .normalizeQuery();\n    // -> ?foo=bar&foo=baz\n\n// working with relative paths\nURI(\"/foo/bar/baz.html\")\n  .relativeTo(\"/foo/bar/world.html\");\n    // -> ./baz.html\n\nURI(\"/foo/bar/baz.html\")\n  .relativeTo(\"/foo/bar/sub/world.html\")\n    // -> ../baz.html\n  .absoluteTo(\"/foo/bar/sub/world.html\");\n    // -> /foo/bar/baz.html\n\n// URI Templates\nURI.expand(\"/foo/{dir}/{file}\", {\n  dir: \"bar\",\n  file: \"world.html\"\n});\n// -> /foo/bar/world.html\n```\n\nSee the [About Page](http://medialize.github.io/URI.js/) and [API Docs](http://medialize.github.io/URI.js/docs.html) for more stuff.\n\n## Using URI.js ##\n\nURI.js (without plugins) has a gzipped weight of about 7KB - if you include all extensions you end up at about 13KB. So unless you *need* second level domain support and use URI templates, we suggest you don't include them in your build. If you don't need a full featured URI mangler, it may be worth looking into the much smaller parser-only alternatives [listed below](#alternatives).\n\nURI.js is available through [npm](https://www.npmjs.com/package/urijs), [bower](http://bower.io/search/?q=urijs), [cdnjs](https://cdnjs.com/libraries/URI.js) and manually from the [build page](http://medialize.github.io/URI.js/build.html):\n\n```bash\n# using bower\nbower install uri.js\n\n# using npm\nnpm install urijs\n```\n\n### Browser ###\n\nI guess you'll manage to use the [build tool](http://medialize.github.io/URI.js/build.html) or follow the [instructions below](#minify) to combine and minify the various files into URI.min.js - and I'm fairly certain you know how to `<script src=\".../URI.min.js\"></script>` that sucker, too.\n\n### Node.js and NPM ###\n\nInstall with `npm install urijs` or add `\"urijs\"` to the dependencies in your `package.json`.\n\n```javascript\n// load URI.js\nvar URI = require('urijs');\n// load an optional module (e.g. URITemplate)\nvar URITemplate = require('urijs/src/URITemplate');\n\nURI(\"/foo/bar/baz.html\")\n  .relativeTo(\"/foo/bar/sub/world.html\")\n    // -> ../baz.html\n```\n\n### RequireJS ###\n\nClone the URI.js repository or use a package manager to get URI.js into your project. \n\n```javascript\nrequire.config({\n  paths: {\n    urijs: 'where-you-put-uri.js/src'\n  }\n});\n\nrequire(['urijs/URI'], function(URI) {\n  console.log(\"URI.js and dependencies: \", URI(\"//amazon.co.uk\").is('sld') ? 'loaded' : 'failed');\n});\nrequire(['urijs/URITemplate'], function(URITemplate) {\n  console.log(\"URITemplate.js and dependencies: \", URITemplate._cache ? 'loaded' : 'failed');\n});\n```\n\n## Minify ##\n\nSee the [build tool](http://medialize.github.io/URI.js/build.html) or use [Google Closure Compiler](http://closure-compiler.appspot.com/home):\n\n```\n// ==ClosureCompiler==\n// @compilation_level SIMPLE_OPTIMIZATIONS\n// @output_file_name URI.min.js\n// @code_url http://medialize.github.io/URI.js/src/IPv6.js\n// @code_url http://medialize.github.io/URI.js/src/punycode.js\n// @code_url http://medialize.github.io/URI.js/src/SecondLevelDomains.js\n// @code_url http://medialize.github.io/URI.js/src/URI.js\n// @code_url http://medialize.github.io/URI.js/src/URITemplate.js\n// ==/ClosureCompiler==\n```\n\n\n## Resources ##\n\nDocuments specifying how URLs work:\n\n* [URL - Living Standard](http://url.spec.whatwg.org/)\n* [RFC 3986 - Uniform Resource Identifier (URI): Generic Syntax](http://tools.ietf.org/html/rfc3986)\n* [RFC 3987 - Internationalized Resource Identifiers (IRI)](http://tools.ietf.org/html/rfc3987)\n* [RFC 2732 - Format for Literal IPv6 Addresses in URL's](http://tools.ietf.org/html/rfc2732)\n* [RFC 2368 - The `mailto:` URL Scheme](https://www.ietf.org/rfc/rfc2368.txt)\n* [RFC 2141 - URN Syntax](https://www.ietf.org/rfc/rfc2141.txt)\n* [IANA URN Namespace Registry](http://www.iana.org/assignments/urn-namespaces/urn-namespaces.xhtml)\n* [Punycode: A Bootstring encoding of Unicode for Internationalized Domain Names in Applications (IDNA)](http://tools.ietf.org/html/rfc3492)\n* [application/x-www-form-urlencoded](http://www.w3.org/TR/REC-html40/interact/forms.html#form-content-type) (Query String Parameters) and [application/x-www-form-urlencoded encoding algorithm](http://www.whatwg.org/specs/web-apps/current-work/multipage/association-of-controls-and-forms.html#application/x-www-form-urlencoded-encoding-algorithm)\n* [What every web developer must know about URL encoding](http://blog.lunatech.com/2009/02/03/what-every-web-developer-must-know-about-url-encoding)\n\nInformal stuff\n\n* [Parsing URLs for Fun and Profit](http://tools.ietf.org/html/draft-abarth-url-01)\n* [Naming URL components](http://tantek.com/2011/238/b1/many-ways-slice-url-name-pieces)\n\nHow other environments do things\n\n* [Java URI Class](http://docs.oracle.com/javase/7/docs/api/java/net/URI.html)\n* [Java Inet6Address Class](http://docs.oracle.com/javase/1.5.0/docs/api/java/net/Inet6Address.html)\n* [Node.js URL API](http://nodejs.org/docs/latest/api/url.html)\n\n[Discussion on Hacker News](https://news.ycombinator.com/item?id=3398837)\n\n### Forks / Code-borrow ###\n\n* [node-dom-urls](https://github.com/passy/node-dom-urls) passy's partial implementation of the W3C URL Spec Draft for Node\n* [urlutils](https://github.com/cofounders/urlutils) cofounders' `window.URL` constructor for Node\n\n### Alternatives ###\n\nIf you don't like URI.js, you may like one of the following libraries. (If yours is not listed, drop me a lineâ€¦)\n\n#### Polyfill ####\n\n* [DOM-URL-Polyfill](https://github.com/arv/DOM-URL-Polyfill/) arv's polyfill of the [DOM URL spec](https://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#interface-urlutils) for browsers\n* [inexorabletash](https://github.com/inexorabletash/polyfill/#whatwg-url-api) inexorabletash's [WHATWG URL API](http://url.spec.whatwg.org/)\n\n#### URL Manipulation ####\n\n* [The simple <a> URL Mutation \"Hack\"](http://jsfiddle.net/rodneyrehm/KkGUJ/) ([jsPerf comparison](http://jsperf.com/idl-attributes-vs-uri-js))\n* [URL.js](https://github.com/ericf/urljs)\n* [furl (Python)](https://github.com/gruns/furl)\n* [mediawiki Uri](https://svn.wikimedia.org/viewvc/mediawiki/trunk/phase3/resources/mediawiki/mediawiki.Uri.js?view=markup) (needs mw and jQuery)\n* [jurlp](https://github.com/tombonner/jurlp)\n* [jsUri](https://github.com/derek-watson/jsUri)\n\n#### URL Parsers ####\n\n* [The simple <a> URL Mutation \"Hack\"](http://jsfiddle.net/rodneyrehm/KkGUJ/) ([jsPerf comparison](http://jsperf.com/idl-attributes-vs-uri-js))\n* [URI Parser](http://blog.stevenlevithan.com/archives/parseuri)\n* [jQuery-URL-Parser](https://github.com/allmarkedup/jQuery-URL-Parser)\n* [Google Closure Uri](https://google.github.io/closure-library/api/class_goog_Uri.html)\n* [URI.js by Gary Court](https://github.com/garycourt/uri-js)\n\n#### URI Template ####\n\n* [uri-template](https://github.com/rezigned/uri-template.js) (supporting extraction as well) by Rezigne\n* [uri-templates](https://github.com/geraintluff/uri-templates) (supporting extraction as well) by Geraint Luff\n* [uri-templates](https://github.com/marc-portier/uri-templates) by Marc Portier\n* [uri-templates](https://github.com/geraintluff/uri-templates) by Geraint Luff (including reverse operation)\n* [URI Template JS](https://github.com/fxa/uritemplate-js) by Franz Antesberger\n* [Temple](https://github.com/brettstimmerman/temple) by Brett Stimmerman\n* ([jsperf comparison](http://jsperf.com/uri-templates/2))\n\n#### Various ####\n\n* [TLD.js](https://github.com/oncletom/tld.js) - second level domain names\n* [Public Suffix](http://mxr.mozilla.org/mozilla-central/source/netwerk/dns/effective_tld_names.dat?raw=1) - second level domain names\n* [uri-collection](https://github.com/scivey/uri-collection) - underscore based utility for working with many URIs\n\n## Authors ##\n\n* [Rodney Rehm](https://github.com/rodneyrehm)\n* [Various Contributors](https://github.com/medialize/URI.js/graphs/contributors)\n\n\n## Contains Code From ##\n\n* [punycode.js](http://mths.be/punycode) - Mathias Bynens\n* [IPv6.js](http://intermapper.com/support/tools/IPV6-Validator.aspx) - Rich Brown - (rewrite of the original)\n\n\n## License ##\n\nURI.js is published under the [MIT license](http://www.opensource.org/licenses/mit-license). Until version 1.13.2 URI.js was also published under the [GPL v3](http://opensource.org/licenses/GPL-3.0) license - but as this dual-licensing causes more questions than helps anyone, it was dropped with version 1.14.0.\n\n\n## Changelog ##\n\n### 1.16.1 (September 19th 2015) ###\n\nPackage Management Cleanup - no changes to source code!\n\n* renaming package to \"urijs\", was \"URIjs\" (because npm decided to go lower-case at some point and maintaining capitals in your package name poses all sorts of stupid issues)\n* removing [jam](http://jamjs.org/), [spm](http://spmjs.org/), `component.json` and `URI.jquery.json` as nobody cared that URI.js was stuck on 1.14 for a year\n\n### 1.16.0 (July 24th 2015) ###\n\n* **SECURITY** fixing [`URI.parseHost()`](http://medialize.github.io/URI.js/docs.html#static-parseHost) to rewrite `\\` to `/` as Node and Browsers do - [Issue #233](https://github.com/medialize/URI.js/pull/233)\n* fixing [`.host()`](http://medialize.github.io/URI.js/docs.html#accessors-host) and [`.authority()`](http://medialize.github.io/URI.js/docs.html#accessors-authority) to raise an error if they contain a path segment (extending [Issue #233](https://github.com/medialize/URI.js/pull/233))\n\n### 1.15.2 (July 2nd 2015) ###\n\n* fixing [`URI.parseQuery()`](http://medialize.github.io/URI.js/docs.html#static-parseQuery) to accept `?foo&foo=bar` - [Issue #220](https://github.com/medialize/URI.js/issues/220)\n* fixing [`.segmentCoded()`](http://medialize.github.io/URI.js/docs.html#accessors-segmentCoded) to encode (instead of decode) array input - [Issue #223](https://github.com/medialize/URI.js/issues/223)\n* fixing [`.normalizePath()`](http://medialize.github.io/URI.js/docs.html#normalize-path) to properly resolve `/foo/..` to `/` - [Issue #224](https://github.com/medialize/URI.js/issues/224)\n* fixing [`.relativeTo()`](http://medialize.github.io/URI.js/docs.html#relativeto) to resolve `/foo/` and `/foo/bar` to `./` instead of empty string - [Issue #226](https://github.com/medialize/URI.js/issues/226)\n* fixing `bower.json`'s `\"main\": \"src/URI.js\"` - [Issue #227](https://github.com/medialize/URI.js/issues/227)\n\n### 1.15.1 (April 5th 2015) ###\n\n* fixing `URI()` to match behavior of `new URI()` (caused by [#196](https://github.com/medialize/URI.js/issues/196)) - [Issue #205](https://github.com/medialize/URI.js/issues/205)\n* fixing [`URI.removeQuery()`](http://medialize.github.io/URI.js/docs.html#search-remove) to accept RegExp for name and value arguments - ([Issue #204](https://github.com/medialize/URI.js/issues/204), [peterwillis](https://github.com/peterwillis))\n\n### 1.15.0 (April 1st 2015 - no joke, promise!) ###\n\n* fixing `URI(undefined)` to throw TypeError - ([Issue #189](https://github.com/medialize/URI.js/issues/189), [Issue #196](https://github.com/medialize/URI.js/issues/196), [eakron](https://github.com/eakron)) - *tiny backward-compatibility-break*\n* fixing [`.absoluteTo()`](http://medialize.github.io/URI.js/docs.html#absoluteto) - ([Issue #200](https://github.com/medialize/URI.js/issues/200), [giltayar](https://github.com/giltayar))\n* fixing [`.pathname()`](http://medialize.github.io/URI.js/docs.html#accessors-pathname) to properly en/decode URN paths - ([Issue #201](https://github.com/medialize/URI.js/pull/201), [mlefoster](https://github.com/mlefoster))\n* fixing URI normalization to properly handle URN paths based on [RFC 2141](https://www.ietf.org/rfc/rfc2141.txt) syntax - ([Issue #201](https://github.com/medialize/URI.js/pull/201), [mlefoster](https://github.com/mlefoster))\n  * fixing [`.normalize()`](http://medialize.github.io/URI.js/docs.html#normalize) and [`.normalizePath()`](http://medialize.github.io/URI.js/docs.html#normalize-path) to properly normalize URN paths\n  * adding `URI.encodeUrnPathSegment()`\n  * adding `URI.decodeUrnPathSegment()`\n  * adding `URI.decodeUrnPath()`\n  * adding `URI.recodeUrnPath()`\n\n### 1.14.2 (February 25th 2015) ###\n\n* fixing inclusion of LICENSE in packages - ([Issue #174](https://github.com/medialize/URI.js/issues/174))\n* fixing [`URI.parseHost()`](http://medialize.github.io/URI.js/docs.html#static-parseHost) to not interpret colon in path as IPv6 hostname - ([Issue #190](https://github.com/medialize/URI.js/issues/190))\n* adding meta data for [SPM](http://www.spmjs.io/) package manager - ([Issue #176](https://github.com/medialize/URI.js/issues/176))\n* adding license meta to `bower.json`\n\n### 1.14.1 (October 1st 2014) ###\n\n* fixing handling of String instances (not string primitives) - ([Issue #146](https://github.com/medialize/URI.js/issues/146))\n* fixing Firefox [`.watch()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/watch) interfering with `.parseQuery()` - ([Issue #169](https://github.com/medialize/URI.js/issues/169))\n* fixing [`addQuery()`](http://medialize.github.io/URI.js/docs.html#search-add) to not throw error on null value - ([Issue #171](https://github.com/medialize/URI.js/issues/171))\n\n### 1.14.0 (September 8th 2014) ###\n\n* adding Hungarian second level domains - ([Issue #159](https://github.com/medialize/URI.js/issues/159))\n* adding `<audio src=\"â€¦\">` and `<video src=\"â€¦\">` to supported DOM attributes - ([Issue #160](https://github.com/medialize/URI.js/issues/160)), ([Issue #161](https://github.com/medialize/URI.js/issues/161))\n* fixing `file://hostname/path` parsing - ([Issue #158](https://github.com/medialize/URI.js/issues/158))\n* fixing `.decodePathSegment()` to not throw malformed URI error - ([Issue #163](https://github.com/medialize/URI.js/issues/163))\n\n### 1.13.2 (May 29th 2014) ###\n\n* changes to package management manifests only\n\n### 1.13.1 (April 16th 2014) ###\n\n* fixing IPv6 normalization (bad variable name) - ([Issue #145](https://github.com/medialize/URI.js/issues/145))\n* adding grunt and jshint\n* changing code style to 2 spaces indentation, single quote strings\n* applying `'use strict';` everywhere\n* fixing jshint warnings\n\n### 1.13.0 (April 15th 2014) ###\n\n* fixing [`URI.parseHost()`](http://medialize.github.io/URI.js/docs.html#static-parseHost) and [`URI.buildHost()`](http://medialize.github.io/URI.js/docs.html#static-buildHost) to properly parse and build the IPv6 examples given in [RFC2732 Format for Literal IPv6 Addresses in URL's](http://tools.ietf.org/html/rfc2732#section-2) - ([Issue #144](https://github.com/medialize/URI.js/issues/144))\n* adding performance improvements to SecondLevelDomain - ([PR #122](https://github.com/medialize/URI.js/pull/122), [gorhill](https://github.com/gorhill))\n\n### 1.12.1 (March 8th 2014) ###\n\n* fixing [`.encodeQuery()`](http://medialize.github.io/URI.js/docs.html#static-encodeQuery) and [`.decodeQuery()`](http://medialize.github.io/URI.js/docs.html#static-decodeQuery) to respect [`URI.escapeQuerySpace`](http://medialize.github.io/URI.js/docs.html#setting-escapeQuerySpace) - ([Issue #137](https://github.com/medialize/URI.js/issues/137))\n* fixing fragment plugins to return URI for simpler loading - ([Issue #139](https://github.com/medialize/URI.js/issues/139))\n\n### 1.12.0 (January 23rd 2014) ###\n\n* fixing [`.absoluteTo()`](http://medialize.github.io/URI.js/docs.html#absoluteto) to comply with [RFC3986 Reference Resolution Examples](http://tools.ietf.org/html/rfc3986#section-5.4) - ([Issue #113](https://github.com/medialize/URI.js/issues/113))\n* fixing [`.normalizePath()`](http://medialize.github.io/URI.js/docs.html#normalize-path) to maintain leading parent references (`../`) for relative paths, while removing them for absolute paths - ([Issue #133](https://github.com/medialize/URI.js/issues/133))\n* fixing `URI.protocol_expression` to properly accept `.` in compliance with [RFC 3986 - Scheme](http://tools.ietf.org/html/rfc3986#section-3.1) - ([Issue #132](https://github.com/medialize/URI.js/issues/132))\n* fixing [`URI.withinString()`](http://medialize.github.io/URI.js/docs.html#static-withinString) to not use backtracking prone regular expression `URI.find_uri_expression` anymore - ([Issue #131](https://github.com/medialize/URI.js/issues/131))\n* fixing [`URI.withinString()`](http://medialize.github.io/URI.js/docs.html#static-withinString) to accept options `ignore` and `ignoreHtml` to allow better control over which detected URLs get handled - ([Issue #117](https://github.com/medialize/URI.js/issues/117))\n* fixing [`URI.withinString()`](http://medialize.github.io/URI.js/docs.html#static-withinString) to accept option `start` to specify the RegExp used for finding the beginning of an URL (defaults to `/\\b(?:([a-z][a-z0-9.+-]*:\\/\\/)|www\\.)/gi`) - ([Issue #115](https://github.com/medialize/URI.js/issues/115))\n\n### 1.11.2 (August 14th 2013) ###\n\n* fixing regression for Node.js introduced by `fixing unsafe eval by using UMD's root` - ([Issue #107](https://github.com/medialize/URI.js/issues/107))\n* fixing parser to accept malformed userinfo (non-encoded email address) - ([Issue #108](https://github.com/medialize/URI.js/issues/108))\n\n### 1.11.1 (August 13th 2013) ###\n\n* fixing inconsistent [`.relativeTo()`](http://medialize.github.io/URI.js/docs.html#relativeto) results caused by inconsistent URI component handling - ([Issue #103](https://github.com/medialize/URI.js/issues/103))\n* fixing unsafe eval by using UMD's root - ([Issue #105](https://github.com/medialize/URI.js/issues/105))\n* fixing [`.segment()`](http://medialize.github.io/URI.js/docs.html#accessors-segment) to allow appending an empty element - ([Issue #106](https://github.com/medialize/URI.js/issues/106))\n* fixing [`.segment()`](http://medialize.github.io/URI.js/docs.html#accessors-segment) to collapse empty elements in array notation\n\n### 1.11.0 (August 6th 2013) ###\n\n* adding [`.segmentCoded()`](http://medialize.github.io/URI.js/docs.html#accessors-segmentCoded) to provide en/decoding interface to `.segment()` - ([Issue #79](https://github.com/medialize/URI.js/issues/79))\n* optimize [`.relativeTo()`](http://medialize.github.io/URI.js/docs.html#relativeto) results - ([Issue #78](https://github.com/medialize/URI.js/issues/78), [Issue #95](https://github.com/medialize/URI.js/issues/95))\n* removing obsolete code fragments from `URI.parse()` and `relativeTo()` - ([Issue #100](https://github.com/medialize/URI.js/issues/100))\n* adding setting [`URI.escapeQuerySpace`](http://medialize.github.io/URI.js/docs.html#setting-escapeQuerySpace) to control if query string should escape spaces using `+` or `%20` - ([Issue #74](https://github.com/medialize/URI.js/issues/74))\n* updating [Punycode.js](https://github.com/bestiejs/punycode.js/) to version 1.2.3\n* fixing internal `strictEncodeURIComponent()` to work in Firefox 3.6 - ([Issue #91](https://github.com/medialize/URI.js/issues/91))\n* fixing [`.normalizePath()`](http://medialize.github.io/URI.js/docs.html#normalize-path) to properly resolve `/.` and `/.//` to `/` - ([Issue #97](https://github.com/medialize/URI.js/issues/97))\n* fixing [`.path()`](http://medialize.github.io/URI.js/docs.html#accessors-pathname) to return empty string if there is no path - ([Issue #82](https://github.com/medialize/URI.js/issues/82))\n* fixing crashing of `URI.decodeQuery()` on malformed input - now returns original undecoded data - ([Issue #87](https://github.com/medialize/URI.js/issues/87), [Issue #92](https://github.com/medialize/URI.js/issues/92))\n* fixing build tool - ([Issue #83](https://github.com/medialize/URI.js/issues/83))\n* fixing for-loop to make closure compiler happy - ([Issue #93](https://github.com/medialize/URI.js/issues/93))\n* adding [`URI.noConflict()`](http://medialize.github.io/URI.js/docs.html#static-noConflict) - ([Issue #84](https://github.com/medialize/URI.js/issue/84))\n* fixing whitespace in code - ([Issue #84](https://github.com/medialize/URI.js/issue/84))\n* fixing [`.readable()`](http://medialize.github.io/URI.js/docs.html#readable) to decode the hash value as well - ([Issue #90](https://github.com/medialize/URI.js/issue/90))\n* prevent `jquery.URI.js` from temporarily using `window.location` as the `href` of an empty attribute of a DOM element - ([Issue #94](https://github.com/medialize/URI.js/issues/94))\n* fixing internal `getType()` for IE8 with undefined value - ([Issue #96](https://github.com/medialize/URI.js/issues/96))\n* adding DOM elements to [URI constructor](http://medialize.github.io/URI.js/docs.html#constructor) - ([Issue #77](https://github.com/medialize/URI.js/issues/77)):\n  * [`<a href=\"...\">`](http://www.w3.org/html/wg/drafts/html/master/text-level-semantics.html#the-a-element)\n  * [`<blockquote cite=\"...\">`](http://www.w3.org/html/wg/drafts/html/master/grouping-content.html#the-blockquote-element)\n  * [`<link href=\"...\">`](http://www.w3.org/html/wg/drafts/html/master/document-metadata.html#the-link-element)\n  * [`<base href=\"...\">`](http://www.w3.org/html/wg/drafts/html/master/document-metadata.html#the-base-element)\n  * [`<script src=\"...\">`](http://www.w3.org/html/wg/drafts/html/master/scripting-1.html#script)\n  * [`<form action=\"...\">`](http://www.w3.org/html/wg/drafts/html/master/forms.html#the-form-element)\n  * [`<input type=\"image\" src=\"...\">`](http://www.w3.org/html/wg/drafts/html/master/forms.html#the-input-element)\n  * [`<img src=\"...\">`](http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#the-img-element)\n  * [`<area href=\"...\">`](http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#the-area-element)\n  * [`<iframe src=\"...\">`](http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#the-iframe-element)\n  * [`<embed src=\"...\">`](http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#the-embed-element)\n  * [`<source src=\"...\">`](http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#the-source-element)\n  * [`<track src=\"...\">`](http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#the-track-element)\n* optimize `jquery.URI.js` to use new DOM element infrastructure\n\n### 1.10.2 (April 15th 2013) ###\n\n* fixing [`relativeTo()`](http://medialize.github.io/URI.js/docs.html#relativeto) - ([Issue #75](https://github.com/medialize/URI.js/issues/75))\n* fixing [`normalizePath()`](http://medialize.github.io/URI.js/docs.html#normalize-path) to not prepend `./` to relative paths - ([Issue #76](https://github.com/medialize/URI.js/issues/76))\n\n### 1.10.1 (April 2nd 2013) ###\n\n* adding [`absoluteTo()`](http://medialize.github.io/URI.js/docs.html#absoluteto) to properly resolve relative scheme - ([Issue #71](https://github.com/medialize/URI.js/issues/73))\n\n### 1.10.0 (March 16th 2013) ###\n\n* adding [`hasQuery()`](http://medialize.github.io/URI.js/docs.html#search-has) - ([Issue #71](https://github.com/medialize/URI.js/issues/71))\n* fixing URI property detection to return 'src' if none was detected (`jquery.URI.js`) - ([Issue #69](https://github.com/medialize/URI.js/issues/69))\n\n### 1.9.1 (February 12th 2013) ###\n\n* fixing IE9 compatibility with location import: `URI(location)`\n* fixing string character access for IE7 - ([Issue #67](https://github.com/medialize/URI.js/issues/67)), ([Issue #68](https://github.com/medialize/URI.js/issues/68))\n\n### 1.9.0 (February 11th 2013) ###\n\n* adding [`.setQuery()`](http://medialize.github.io/URI.js/docs.html#search-set) - ([Issue #64](https://github.com/medialize/URI.js/issues/64))\n* adding callback argument to [`.query()`](http://medialize.github.io/URI.js/docs.html#accessors-search)\n* adding jQuery 1.9.1 to the test suite\n\n### 1.8.3 (January 9th 2013) ###\n\n* fixing [UglifyJS2](https://github.com/mishoo/UglifyJS2) compression - ([Issue #60](https://github.com/medialize/URI.js/issues/60), [fidian](https://github.com/fidian))\n\n### 1.8.2 (December 27th 2012) ###\n\n* adding `.fragmentPrefix()` to configure prefix of fragmentURI and fragmentQuery extensions - ([Issue #55](https://github.com/medialize/URI.js/issues/55))\n* adding docs for [`.toString()`, `.valueOf()`](http://medialize.github.io/URI.js/docs.html#toString) and [`.href()`](http://medialize.github.io/URI.js/docs.html#href) - ([Issue #56](https://github.com/medialize/URI.js/issues/56))\n* fixing [`.relativeTo()`](http://medialize.github.io/URI.js/docs.html#relativeto) for descendants - ([Issue #57](https://github.com/medialize/URI.js/issues/57))\n\n### 1.8.1 (November 15th 2012) ###\n\n* fixing build() to properly omit empty query and fragment ([Issue #53](https://github.com/medialize/URI.js/issues/53))\n\n### 1.8.0 (November 13th 2012) ###\n\n* adding [`.resource()`](http://medialize.github.io/URI.js/docs.html#accessors-resource) as compound of [path, query, fragment]\n* adding jQuery 1.8.x compatibility for jQuery.URI.js (remaining backwards compatibility!)\n* adding default ports for gopher, ws, wss\n* adding [`.duplicateQueryParameters()`](http://medialize.github.io/URI.js/docs.html#setting-duplicateQueryParameters) to control if `key=value` duplicates have to be preserved or reduced ([Issue #51](https://github.com/medialize/URI.js/issues/51))\n* updating [Punycode.js](https://github.com/bestiejs/punycode.js/) to version 1.1.1\n* improving AMD/Node using [UMD returnExports](https://github.com/umdjs/umd/blob/master/returnExports.js) - ([Issue #44](https://github.com/medialize/URI.js/issues/44), [Issue #47](https://github.com/medialize/URI.js/issues/47))\n* fixing `.addQuery(\"empty\")` to properly add `?empty` - ([Issue #46](https://github.com/medialize/URI.js/issues/46))\n* fixing parsing of badly formatted userinfo `http://username:pass:word@hostname`\n* fixing parsing of Windows-Drive-Letter paths `file://C:/WINDOWS/foo.txt`\n* fixing `URI(location)` to properly parse the URL - ([Issue #52](https://github.com/medialize/URI.js/issues/52))\n* fixing type error for fragment abuse demos - ([Issue #50](https://github.com/medialize/URI.js/issues/50))\n* adding documentation for various [encode/decode functions](http://medialize.github.io/URI.js/docs.html#encoding-decoding)\n* adding some pointers on possible problems with URLs to [About URIs](http://medialize.github.io/URI.js/about-uris.html)\n* adding tests for fragment abuse and splitting tests into separate scopes\n* adding meta-data for [Jam](http://jamjs.org/) and [Bower](http://twitter.github.com/bower/)\n\nNote: QUnit seems to be having some difficulties on IE8. While the jQuery-plugin tests fail, the plugin itself works. We're still trying to figure out what's making QUnit \"lose its config state\".\n\n### 1.7.4 (October 21st 2012) ###\n\n* fixing parsing of `/wiki/Help:IPA` - ([Issue #49](https://github.com/medialize/URI.js/issues/49))\n\n### 1.7.3 (October 11th 2012) ###\n\n* fixing `strictEncodeURIComponent()` to properly encode `*` to `%2A`\n* fixing IE9's incorrect report of `img.href` being available - ([Issue #48](https://github.com/medialize/URI.js/issues/48))\n\n### 1.7.2 (August 28th 2012) ###\n\n* fixing SLD detection in [`.tld()`](http://medialize.github.io/URI.js/docs.html#accessors-tld) - `foot.se` would detect `t.se` - ([Issue #42](https://github.com/medialize/URI.js/issues/42))\n* fixing [`.absoluteTo()`](http://medialize.github.io/URI.js/docs.html#absoluteto) to comply with [RFC 3986 Section 5.2.2](http://tools.ietf.org/html/rfc3986#section-5.2.2) - ([Issue #41](https://github.com/medialize/URI.js/issues/41))\n* fixing `location` not being available in non-browser environments like node.js ([Issue #45](https://github.com/medialize/URI.js/issues/45) [grimen](https://github.com/grimen))\n\n### 1.7.1 (August 14th 2012) ###\n\n* fixing [`.segment()`](http://medialize.github.io/URI.js/docs.html#accessors-segment)'s append operation - ([Issue #39](https://github.com/medialize/URI.js/issues/39))\n\n### 1.7.0 (August 11th 2012) ###\n\n* fixing URI() constructor passing of `base` - ([Issue #33](https://github.com/medialize/URI.js/issues/33) [LarryBattle](https://github.com/LarryBattle))\n* adding [`.segment()`](http://medialize.github.io/URI.js/docs.html#accessors-segment) accessor - ([Issue #34](https://github.com/medialize/URI.js/issues/34))\n* upgrading `URI.encode()` to strict URI encoding according to RFC3986\n* adding `URI.encodeReserved()` to exclude reserved characters (according to RFC3986) from being encoded\n* adding [URI Template (RFC 6570)](http://tools.ietf.org/html/rfc6570) support with [`URITemplate()`](http://medialize.github.io/URI.js/uri-template.html)\n\n### 1.6.3 (June 24th 2012) ###\n\n* fixing [`.absoluteTo()`](http://medialize.github.io/URI.js/docs.html#absoluteto) to join two relative paths properly - ([Issue #29](https://github.com/medialize/URI.js/issues/29))\n* adding [`.clone()`](http://medialize.github.io/URI.js/docs.html#clone) to copy an URI instance\n\n### 1.6.2 (June 23rd 2012) ###\n\n* [`.directory()`](http://medialize.github.io/URI.js/docs.html#accessors-directory) now returns empty string if there is no directory\n* fixing [`.absoluteTo()`](http://medialize.github.io/URI.js/docs.html#absoluteto) to join two relative paths properly - ([Issue #29](https://github.com/medialize/URI.js/issues/29))\n\n### 1.6.1 (May 19th 2012) ###\n\n* fixing TypeError on [`.domain()`](http://medialize.github.io/URI.js/docs.html#accessors-domain) with dot-less hostnames - ([Issue #27](https://github.com/medialize/URI.js/issues/27))\n\n### 1.6.0 (March 19th 2012) ###\n\n* adding [URN](http://tools.ietf.org/html/rfc3986#section-3) (`javascript:`, `mailto:`, ...) support\n* adding [`.scheme()`](http://medialize.github.io/URI.js/docs.html#accessors-protocol) as alias of [`.protocol()`](http://medialize.github.io/URI.js/docs.html#accessors-protocol)\n* adding [`.userinfo()`](http://medialize.github.io/URI.js/docs.html#accessors-userinfo) to comply with terminology of [RFC 3986](http://tools.ietf.org/html/rfc3986#section-3.2.1)\n* adding [jQuery Plugin](http://medialize.github.io/URI.js/jquery-uri-plugin.html) `src/jquery.URI.js`\n* fixing relative scheme URLs - ([Issue #19](https://github.com/medialize/URI.js/issues/19) [byroot](https://github.com/byroot))\n\n### 1.5.0 (February 19th 2012) ###\n\n* adding Second Level Domain (SLD) Support - ([Issue #17](https://github.com/medialize/URI.js/issues/17))\n\n### 1.4.3 (January 28th 2012) ###\n\n* fixing global scope leakage - ([Issue #15](https://github.com/medialize/URI.js/issues/15) [mark-rushakoff](https://github.com/mark-rushakoff))\n\n### 1.4.2 (January 25th 2012) ###\n\n* improving CommonJS compatibility - ([Issue #14](https://github.com/medialize/URI.js/issues/14) [FGRibreau](https://github.com/FGRibreau))\n\n### 1.4.1 (January 21st 2012) ###\n\n* adding CommonJS compatibility - ([Issue #11](https://github.com/medialize/URI.js/issues/11), [Evangenieur](https://github.com/Evangenieur))\n\n### 1.4.0 (January 12th 2012) ###\n\n* adding [`URI.iso8859()`](http://medialize.github.io/URI.js/docs.html#static-iso8859) and [`URI.unicode()`](http://medialize.github.io/URI.js/docs.html#static-unicode) to switch base charsets - ([Issue #10](https://github.com/medialize/URI.js/issues/10), [mortenn](https://github.com/))\n* adding [`.iso8859()`](http://medialize.github.io/URI.js/docs.html#iso8859) and [`.unicode()`](http://medialize.github.io/URI.js/docs.html#unicode) to convert an URI's escape encoding\n\n### 1.3.1 (January 3rd 2011) ###\n\n* updating Punycode.js to version 0.3.0\n* adding edge-case tests (\"jim\")\n* fixing edge-cases in .protocol(), .port(), .subdomain(), .domain(), .tld(), .filename()\n* fixing parsing of hostname in [`.hostname()`](http://medialize.github.io/URI.js/docs.html#accessors-hostname)\n\n### 1.3.0 (December 30th 2011) ###\n\n* adding [`.subdomain()`](http://medialize.github.io/URI.js/docs.html#accessors-subdomain) convenience accessor\n* improving internal deferred build handling\n* fixing thrown Error for `URI(\"http://example.org\").query(true)` - ([Issue #6](https://github.com/medialize/URI.js/issues/6))\n* adding examples for extending URI.js for [fragment abuse](http://medialize.github.io/URI.js/docs.html#fragment-abuse), see src/URI.fragmentQuery.js and src/URI.fragmentURI.js - ([Issue #2](https://github.com/medialize/URI.js/issues/2))\n\n### 1.2.0 (December 29th 2011) ###\n\n* adding [`.equals()`](http://medialize.github.io/URI.js/docs.html#equals) for URL comparison\n* fixing encoding/decoding for [`.pathname()`](http://medialize.github.io/URI.js/docs.html#accessors-pathname), [`.directory()`](http://medialize.github.io/URI.js/docs.html#accessors-directory), [`.filename()`](http://medialize.github.io/URI.js/docs.html#accessors-filename) and [`.suffix()`](http://medialize.github.io/URI.js/docs.html#accessors-suffix) according to [RFC 3986 3.3](http://tools.ietf.org/html/rfc3986#section-3.3)\n* fixing escape spaces in query strings with `+` according to [application/x-www-form-urlencoded](http://www.w3.org/TR/REC-html40/interact/forms.html#form-content-type)\n* fixing to allow [`URI.buildQuery()`](http://medialize.github.io/URI.js/docs.html#static-buildQuery) to build duplicate key=value combinations\n* fixing [`URI(string, string)`](http://medialize.github.io/URI.js/docs.html#constructor) constructor to conform with the [specification](http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#constructor)\n* adding [`.readable()`](http://medialize.github.io/URI.js/docs.html#readable) for humanly readable representation of encoded URIs\n* fixing bug where @ in pathname would be parsed as part of the authority\n\n### 1.1.0 (December 28th 2011) ###\n\n* adding [`URI.withinString()`](http://medialize.github.io/URI.js/docs.html#static-withinString)\n* adding [`.normalizeProtocol()`](http://medialize.github.io/URI.js/docs.html#normalize-protocol) to lowercase protocols\n* fixing [`.normalizeHostname()`](http://medialize.github.io/URI.js/docs.html#normalize-host) to lowercase hostnames\n* fixing String.substr() to be replaced by String.substring() - ([Issue #1](https://github.com/medialize/URI.js/issues/1))\n* fixing parsing \"?foo\" to `{foo: null}` [Algorithm for collecting URL parameters](http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#collect-url-parameters)\n* fixing building `{foo: null, bar: \"\"}` to \"?foo&bar=\" [Algorithm for serializing URL parameters](http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#url-parameter-serialization)\n* fixing RegExp escaping\n\n### 1.0.0 (December 27th 2011) ###\n\n* Initial URI.js\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/medialize/URI.js/issues"
  },
  "_id": "urijs@1.16.1",
  "_from": "urijs@1.16.1"
}
